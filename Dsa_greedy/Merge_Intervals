//https://leetcode.com/problems/merge-intervals/description/
bool cmp(vector<int> &a,vector<int> &b){
    return a[0]<b[0];
}
class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),cmp);
        vector<vector<int>> ans;
        int n=intervals.size();
        ans.push_back(intervals[0]);
        for(int i=1;i<n;i++){
            vector<int> curr=intervals[i];
            if(curr[0]<=ans[ans.size()-1][1]){
                ans[ans.size()-1][0]=min(ans[ans.size()-1][0],curr[0]);
                ans[ans.size()-1][1]=max(ans[ans.size()-1][1],curr[1]);
            }
            else{
                ans.push_back(intervals[i]);
            }

        }
        return ans;
    }
};
